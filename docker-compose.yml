version: '3.8'

services:

  # Main Angular App (builds with Dockerfile in ./main-app)
  main-app:
    build: ./main-app
    container_name: main-app-c
    networks:
      - pps-network

  # Artist Angular App (builds with Dockerfile in ./artist-app)
  artist-app:
    build: ./artist-app
    container_name: artist-app-c
    networks:
      - pps-network

  # MySQL Database
  db:
    image: manojshrees/purrfectpalstudio-db:latest
    container_name: db-c
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pps-network

  # Node.js Backend
  backend:
    image: manojshrees/purrfectpalstudio-backend:latest
    container_name: backend-c
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - pps-network
      
  # Nginx Frontend (serves both Angular apps + API proxy)
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Main Nginx config and site configs
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro

      # Shared proxy config
      - ./nginx/api_proxy.conf:/etc/nginx/api_proxy.conf:ro
      - ./nginx/proxy_params:/etc/nginx/proxy_params:ro

      # SSL Certificates
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certs:/etc/ssl/certs:ro

      # Angular built apps (assumes apps are pre-built)
      - ./main-app/dist:/usr/share/nginx/html/main-app:ro
      - ./artist-app/dist:/usr/share/nginx/html/artist-app:ro

    depends_on:
      - main-app
      - artist-app
      - backend
      - db
    networks:
      - pps-network

  webhook:
    image: almir/webhook
    container_name: webhook-listener
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock    # access to host docker
      - ../production-purrfect-pal-studio:/app/production-purrfect-pal-studio
      - ./webhook/hooks.json:/etc/webhook/hooks.json
    networks:
      - pps-network
    command: -/webhook/hooks=/etc/webhook/hooks.json -port 3000 -verbose
    ports:
      - 3000:3000   # Can use NGINX reverse proxy instead


volumes:
  mysql_data:

networks:
  pps-network:
    driver: bridge
